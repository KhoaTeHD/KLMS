@model UserManagementViewModel
@using KLMS.Controllers
@{
    ViewData["Title"] = "Quản lý tài khoản";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid mt-4">
    <!-- Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="mb-1">
                <i class="bi bi-people-fill me-2"></i>Quản lý tài khoản
            </h1>
            <p class="text-muted mb-0">Tổng cộng: @Model.TotalUsers tài khoản</p>
        </div>
        <div>
            <a asp-action="CreateUser" class="btn btn-primary">
                <i class="bi bi-person-plus me-2"></i>Tạo tài khoản mới
            </a>
            <a asp-action="Statistics" class="btn btn-outline-info">
                <i class="bi bi-graph-up me-2"></i>Thống kê
            </a>
        </div>
    </div>

    <!-- Success Message -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle me-2"></i>@TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <!-- Search and Filter -->
    <div class="card shadow-sm mb-4">
        <div class="card-body">
            <form method="get" asp-action="UserManagement">
                <div class="row g-3">
                    <div class="col-md-4">
                        <label class="form-label">
                            <i class="bi bi-search me-1"></i>Tìm kiếm
                        </label>
                        <input type="text" name="searchTerm" value="@Model.SearchTerm" 
                               class="form-control" placeholder="Tên hoặc email...">
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">
                            <i class="bi bi-funnel me-1"></i>Lọc theo vai trò
                        </label>
                        <select name="roleFilter" class="form-select">
                            <option value="">Tất cả vai trò</option>
                            @foreach (var role in ViewBag.Roles as List<string>)
                            {
                                <!option value="@role" @(Model.RoleFilter == role ? "selected" : "")>
                                    @(role == "Admin" ? "Quản trị viên" : 
                                      role == "Teacher" ? "Giáo viên" : 
                                      role == "Student" ? "Học sinh" : role)
                                </!option>
                            }
                        </select>
                    </div>
                    <div class="col-md-2">
                        <label class="form-label">Số lượng/trang</label>
                        <select name="pageSize" class="form-select">
                            <!option value="10" @(Model.PageSize == 10 ? "selected" : "")>10</!option>
                            <!option value="25" @(Model.PageSize == 25 ? "selected" : "")>25</!option>
                            <!option value="50" @(Model.PageSize == 50 ? "selected" : "")>50</!option>
                        </select>
                    </div>
                    <div class="col-md-3 d-flex align-items-end">
                        <button type="submit" class="btn btn-outline-primary me-2">
                            <i class="bi bi-search me-1"></i>Tìm kiếm
                        </button>
                        <a asp-action="UserManagement" class="btn btn-outline-secondary">
                            <i class="bi bi-arrow-clockwise me-1"></i>Làm mới
                        </a>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- Users Table -->
    <div class="card shadow-sm">
        <div class="card-header bg-light">
            <h5 class="mb-0">
                <i class="bi bi-table me-2"></i>Danh sách tài khoản
            </h5>
        </div>
        <div class="card-body p-0">
            @if (!Model.Users.Any())
            {
                <div class="text-center py-5">
                    <i class="bi bi-search text-muted" style="font-size: 3rem;"></i>
                    <h5 class="text-muted mt-3">Không tìm thấy tài khoản nào</h5>
                    <p class="text-muted">Thử thay đổi điều kiện tìm kiếm hoặc tạo tài khoản mới</p>
                </div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead class="table-light">
                            <tr>
                                <th style="width: 40px;">#</th>
                                <th>Thông tin người dùng</th>
                                <th>Vai trò</th>
                                <th>Trạng thái</th>
                                <th>Ngày tạo</th>
                                <th class="text-end" style="width: 200px;">Thao tác</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                int index = (Model.CurrentPage - 1) * Model.PageSize + 1;
                            }
                            @foreach (var user in Model.Users)
                            {
                                var userRoles = Model.UserRoles.ContainsKey(user.Id) ? Model.UserRoles[user.Id] : new List<string>();
                                var primaryRole = userRoles.FirstOrDefault() ?? "Không có vai trò";
                                
                                <tr>
                                    <td class="fw-bold">@(index++)</td>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <div class="avatar-circle me-3">
                                                @user.FullName?.Substring(0, 1).ToUpper()
                                            </div>
                                            <div>
                                                <div class="fw-semibold">@user.FullName</div>
                                                <div class="text-muted small">@user.Email</div>
                                                @if (!string.IsNullOrEmpty(user.PhoneNumber))
                                                {
                                                    <div class="text-muted small">
                                                        <i class="bi bi-telephone me-1"></i>@user.PhoneNumber
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        @if (primaryRole == "Admin")
                                        {
                                            <span class="badge bg-danger">
                                                <i class="bi bi-shield-check me-1"></i>Quản trị viên
                                            </span>
                                        }
                                        else if (primaryRole == "Teacher")
                                        {
                                            <span class="badge bg-primary">
                                                <i class="bi bi-person-workspace me-1"></i>Giáo viên
                                            </span>
                                        }
                                        else if (primaryRole == "Student")
                                        {
                                            <span class="badge bg-success">
                                                <i class="bi bi-mortarboard me-1"></i>Học sinh
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-secondary">@primaryRole</span>
                                        }
                                    </td>
                                    <td>
                                        @if (user.EmailConfirmed)
                                        {
                                            <span class="badge bg-success">
                                                <i class="bi bi-check-circle me-1"></i>Đã xác thực
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-warning">
                                                <i class="bi bi-exclamation-triangle me-1"></i>Chưa xác thực
                                            </span>
                                        }
                                    </td>
                                    <td>
                                        <span class="text-muted">@user.CreatedAt.ToString("dd/MM/yyyy")</span>
                                    </td>
                                    <td class="text-end">
                                        <div class="btn-group" role="group">
                                            <a asp-action="EditUser" asp-route-id="@user.Id" 
                                               class="btn btn-sm btn-outline-primary" title="Chỉnh sửa">
                                                <i class="bi bi-pencil-square"></i>
                                            </a>
                                            <button type="button" class="btn btn-sm btn-outline-warning" 
                                                    onclick="showResetPasswordModal('@user.Id', '@user.Email')" title="Đặt lại mật khẩu">
                                                <i class="bi bi-key"></i>
                                            </button>
                                            @if (!userRoles.Contains("Admin"))
                                            {
                                                <button type="button" class="btn btn-sm btn-outline-danger" 
                                                        onclick="confirmDelete('@user.Id', '@user.Email')" title="Xóa">
                                                    <i class="bi bi-trash"></i>
                                                </button>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <!-- Pagination -->
                @if (Model.TotalPages > 1)
                {
                    <div class="card-footer bg-light">
                        <div class="d-flex justify-content-between align-items-center">
                            <div class="text-muted">
                                Hiển thị @((Model.CurrentPage - 1) * Model.PageSize + 1) - @(Math.Min(Model.CurrentPage * Model.PageSize, Model.TotalUsers)) 
                                trong tổng số @Model.TotalUsers tài khoản
                            </div>
                            <nav>
                                <ul class="pagination pagination-sm mb-0">
                                    @if (Model.CurrentPage > 1)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" asp-action="UserManagement" 
                                               asp-route-page="@(Model.CurrentPage - 1)"
                                               asp-route-searchTerm="@Model.SearchTerm"
                                               asp-route-roleFilter="@Model.RoleFilter"
                                               asp-route-pageSize="@Model.PageSize">Trước</a>
                                        </li>
                                    }
                                    
                                    @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                                    {
                                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                            <a class="page-link" asp-action="UserManagement" 
                                               asp-route-page="@i"
                                               asp-route-searchTerm="@Model.SearchTerm"
                                               asp-route-roleFilter="@Model.RoleFilter"
                                               asp-route-pageSize="@Model.PageSize">@i</a>
                                        </li>
                                    }
                                    
                                    @if (Model.CurrentPage < Model.TotalPages)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" asp-action="UserManagement" 
                                               asp-route-page="@(Model.CurrentPage + 1)"
                                               asp-route-searchTerm="@Model.SearchTerm"
                                               asp-route-roleFilter="@Model.RoleFilter"
                                               asp-route-pageSize="@Model.PageSize">Sau</a>
                                        </li>
                                    }
                                </ul>
                            </nav>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
</div>

<!-- Reset Password Modal -->
<div class="modal fade" id="resetPasswordModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="bi bi-key me-2"></i>Đặt lại mật khẩu
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form id="resetPasswordForm">
                <div class="modal-body">
                    <input type="hidden" id="resetUserId">
                    <p>Đặt lại mật khẩu cho: <strong id="resetUserEmail"></strong></p>
                    <div class="mb-3">
                        <label for="newPassword" class="form-label">Mật khẩu mới</label>
                        <input type="password" class="form-control" id="newPassword" required minlength="6">
                        <div class="form-text">Mật khẩu phải có ít nhất 6 ký tự</div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                    <button type="submit" class="btn btn-warning">
                        <i class="bi bi-key me-1"></i>Đặt lại mật khẩu
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Toast Container -->
<div class="toast-container position-fixed top-0 end-0 p-3"></div>

@section Styles {
    <style>
        .avatar-circle {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            font-size: 1.1rem;
        }
        
        .table td {
            vertical-align: middle;
        }
        
        .btn-group .btn {
            border-radius: 4px !important;
        }
    </style>
}

@section Scripts {
    <script>
        function showResetPasswordModal(userId, userEmail) {
            document.getElementById('resetUserId').value = userId;
            document.getElementById('resetUserEmail').textContent = userEmail;
            document.getElementById('newPassword').value = '';
            new bootstrap.Modal(document.getElementById('resetPasswordModal')).show();
        }

        function confirmDelete(userId, userEmail) {
            if (confirm(`Bạn có chắc chắn muốn xóa tài khoản "${userEmail}"?\n\nHành động này không thể hoàn tác.`)) {
                deleteUser(userId);
            }
        }

        function deleteUser(userId) {
            fetch('@Url.Action("DeleteUser", "Admin")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
                },
                body: `id=${userId}`
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showToast(data.message, 'success');
                    setTimeout(() => location.reload(), 1500);
                } else {
                    showToast(data.message, 'error');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showToast('Có lỗi xảy ra khi xóa tài khoản', 'error');
            });
        }

        document.getElementById('resetPasswordForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const userId = document.getElementById('resetUserId').value;
            const newPassword = document.getElementById('newPassword').value;
            
            if (newPassword.length < 6) {
                showToast('Mật khẩu phải có ít nhất 6 ký tự', 'warning');
                return;
            }

            fetch('@Url.Action("ResetPassword", "Admin")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
                },
                body: `userId=${userId}&newPassword=${encodeURIComponent(newPassword)}`
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showToast(data.message, 'success');
                    bootstrap.Modal.getInstance(document.getElementById('resetPasswordModal')).hide();
                } else {
                    showToast(data.message, 'error');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showToast('Có lỗi xảy ra khi đặt lại mật khẩu', 'error');
            });
        });

        function showToast(message, type = 'info') {
            const toastClass = type === 'error' ? 'bg-danger' : type === 'success' ? 'bg-success' : type === 'warning' ? 'bg-warning' : 'bg-info';
            const toast = document.createElement('div');
            toast.className = `toast align-items-center text-white ${toastClass} border-0`;
            toast.setAttribute('role', 'alert');
            toast.innerHTML = `
                <div class="d-flex">
                    <div class="toast-body">${message}</div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
                </div>
            `;

            document.querySelector('.toast-container').appendChild(toast);
            const bsToast = new bootstrap.Toast(toast);
            bsToast.show();

            toast.addEventListener('hidden.bs.toast', function () {
                toast.remove();
            });
        }
    </script>
}

@{
    // Add CSRF token for AJAX requests
    @Html.AntiForgeryToken()
}